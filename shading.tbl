// ****************************************************************************
//  shading.tbl                                                     Tao project
// ****************************************************************************
// 
//   File Description:
// 
//     Definition of the interface between XLR and native code
//     for the "Shading" module.
// 
// 
// 
// 
// 
// 
// 
// ****************************************************************************
// This software is property of Taodyne SAS - Confidential
// Ce logiciel est la propriété de Taodyne SAS - Confidentiel
//  (C) 2011 Baptiste Soulisse <baptiste.soulisse@taodyne.com>
//  (C) 2011 Taodyne SAS
// ****************************************************************************
#include "shading.h"

// -------------------------------------------------------------------------------------------------------------------
//   CEL SHADING
// -------------------------------------------------------------------------------------------------------------------

PREFIX(CelColor,  tree, "cel_color",
       PARM(r, real, )
       PARM(g, real, )
       PARM(b, real, ),
       return cel_color(self, r, g, b),
       GROUP(module.Shading)
       SYNOPSIS("Set cel shading color.")
       DESCRIPTION("Set cel shading color."))

PREFIX(CelShading,  tree, "cel_shading",,
       return cel_shading(self),
       GROUP(module.Shading)
       SYNOPSIS("Apply cel shading")
       DESCRIPTION("Apply cel shading (or toon shading). "
                   "For further informations, see http://en.wikipedia.org/wiki/Cel-shaded_animation"))

// -------------------------------------------------------------------------------------------------------------------
//   GOOCH SHADING
// -------------------------------------------------------------------------------------------------------------------

PREFIX(WarmDiffuse,  tree, "warm_diffuse",
       PARM(r, real, ),
       return warm_diffuse(self, r),
       GROUP(module.Shading)
       SYNOPSIS("Define warm diffuse coeff for gooch shading.")
       DESCRIPTION("Define warm diffuse coeff for gooch shading."))

PREFIX(CoolDiffuse,  tree, "cool_diffuse",
       PARM(r, real, ),
       return cool_diffuse(self, r),
       GROUP(module.Shading)
       SYNOPSIS("Define cool diffuse coeff for gooch shading.")
       DESCRIPTION("Define cool diffuse coeff for gooch shading."))

PREFIX(WarmColor,  tree, "warm_color",
       PARM(r, real, )
       PARM(g, real, )
       PARM(b, real, ),
       return warm_color(self, r, g, b),
       GROUP(module.Shading)
       SYNOPSIS("Define warm color for gooch shading.")
       DESCRIPTION("Define warm color for gooch shading."))

PREFIX(CoolColor,  tree, "cool_color",
       PARM(r, real, )
       PARM(g, real, )
       PARM(b, real, ),
       return cool_color(self, r, g, b),
       GROUP(module.Shading)
       SYNOPSIS("Define cool color for gooch shading.")
       DESCRIPTION("Define cool color for gooch shading."))

PREFIX(SurfaceColor,  tree, "surface_color",
       PARM(r, real, )
       PARM(g, real, )
       PARM(b, real, ),
       return surface_color(self, r, g, b),
       GROUP(module.Shading)
       SYNOPSIS("Define surface color for gooch shading.")
       DESCRIPTION("Define surface color for gooch shading."))

PREFIX(GoochShading,  tree, "gooch_shading",,
       return gooch_shading(self),
       GROUP(module.Shading)
       SYNOPSIS("Apply gooch shading")
       DESCRIPTION(" Apply gooch shading on current scene."
                   " It change current color in a toon one, result of a mix"
                   " between these define by surface_color, cool_color and warm_color."
                   " Mixing coefficients are defined by diffuse_warm and diffuse_cool."
                   " For further informations, see http://www.yaldex.com/open-gl/ch18lev1sec2.html"))


